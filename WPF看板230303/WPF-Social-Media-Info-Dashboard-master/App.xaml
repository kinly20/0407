<Application x:Class="Dashboard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Dashboard"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>


        <Style x:Key="menuTitle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0 0 25 0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="menuTitleSelect" TargetType="TextBlock">
            <Setter Property="Margin" Value="0 0 25 0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>
       

        <Style x:Key="iconApp" TargetType="Image">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="menuButton" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 7 0 0" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="90" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#a9a9a9" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#AC0F0F" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#921C1B" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DownmenuButton" TargetType="{x:Type Button}">

            <Setter Property="FontSize" Value="11" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#a9a9a9" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="menuButtonSelect" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="0 10 0 0" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="90" />
            <Setter Property="Background" Value="#AC0F0F" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#AC0F0F" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#921C1B" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="menuButtonIcon" TargetType="fa:ImageAwesome">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
        </Style>


        <Style x:Key="menuButtonText" TargetType="TextBlock">
            <Setter Property="Margin" Value="0 7 0 0" />
        </Style>


        <Style x:Key="infoCard" TargetType="Border">
            <Setter Property="CornerRadius" Value="15" />
            <Setter Property="Background" Value="#931B1B" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Margin" Value="8 0 8 0" />
        </Style>


        <Style x:Key="infoCardStack" TargetType="StackPanel">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20 0 0 0" />
        </Style>


        <Style x:Key="infoCardTitle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#e9e9e9" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="Margin" Value="0 0 0 5" />
        </Style>


        <Style x:Key="infoCardText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#e9e9e9" />
            <Setter Property="Opacity" Value="0.8" />
        </Style>


        <Style x:Key="infoCardIcon" TargetType="fa:ImageAwesome">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#e0e0e0" />
            <Setter Property="Margin" Value="0 0 20 0" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
        </Style>


        <Style x:Key="button" TargetType="Button">
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0 0 20 0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="#202934" Padding="15 0 15 0" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#202934" />
                    <Setter Property="Foreground" Value="#e9e9e9" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Normalbutton" TargetType="Button">
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0 0 20 0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"  CornerRadius="5" BorderBrush="#202934" Padding="15 0 15 0" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#202934" />
                    <Setter Property="Foreground" Value="#e9e9e9" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="buttonIcon" TargetType="fa:ImageAwesome">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Height" Value="18" />
        </Style>


        <Style x:Key="buttonText" TargetType="TextBlock">
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="FontSize" Value="14" />
        </Style>


        <Style x:Key="iconBar" TargetType="fa:ImageAwesome">
            <Setter Property="Foreground" Value="#787878" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Height" Value="18" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="socialCard" TargetType="Border">
            <Setter Property="Background" Value="#FDFDFD" />
            <Setter Property="CornerRadius" Value="15" />
            <Setter Property="Margin" Value="8 20 8 0" />
            <Setter Property="BorderBrush" Value="#dbdbdb" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>


        <Style x:Key="socialCardIconBar" TargetType="fa:ImageAwesome" BasedOn="{StaticResource iconBar}">
            <Setter Property="Margin" Value="0 15 20 15" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>


        <Style x:Key="socialCardStack" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>


        <Style x:Key="socialCardIconTitle" TargetType="fa:ImageAwesome">
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
        </Style>


        <Style x:Key="socialCardTitle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>


        <Style x:Key="socialCardCounterTitle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="48" />
            <Setter Property="Margin" Value="0 50 0 5" />
        </Style>


        <Style x:Key="socialCardCounterText" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#808080" />
        </Style>


        <Style TargetType="Separator">
            <Setter Property="Background" Value="#c4c4c4" />
            <Setter Property="Margin" Value="0 60 0 15" />
        </Style>


        <Style x:Key="socialCardBottomTitle" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#808080" />
        </Style>


        <Style x:Key="socialCardBottomText" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="#474747" />
            <Setter Property="Margin" Value="0 5 0 0" />
        </Style>
        
        <Style x:Key="DataGridCell" TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <!--<Setter Property="VerticalAlignment" Value="Center" />-->
        </Style>
        
        <Style x:Key="ComboBox" TargetType="ComboBox">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeThickness="1"
                                       StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBox2" TargetType="ComboBox">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                        <Border x:Name="_borderbg" Background="Transparent"/>
                                        <TextBlock Margin="3 0 3 0" VerticalAlignment="Center" x:Name="_txt" Foreground="#333" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Border x:Name="_border" Background="White" Opacity="0"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Border  Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1,0,0,1"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,0,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!--ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen-->
                            <ToggleButton Grid.Column="0"  Grid.ColumnSpan="2"   x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                            <TextBox   Visibility="Hidden" BorderThickness="0"   Margin="2 0 0 0" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!--Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen-->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="150" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"  BorderBrush="#e8e8e8" BorderThickness="1 0 1 1"/>
                                    <ScrollViewer Margin="1"  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProgressBar" TargetType="ProgressBar">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Background" Value="#6fae5f"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid Background="#00000000">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid Height="{TemplateBinding Height}">
                                <Border Background="#000000" CornerRadius="7.5" Opacity="0.05"/>
                                <Border BorderBrush="#000000" BorderThickness="1" CornerRadius="7.5" Opacity="0.1"/>
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Border x:Name="PART_Track"/>
                                    <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="width1"/>
                                            <ColumnDefinition x:Name="width2" Width="0"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="Animation"  RenderTransformOrigin="0.5,0.5">
                                            <Grid.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                    <RotateTransform Angle="180"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Grid.RenderTransform>
                                            <Border Background="{TemplateBinding Background}" CornerRadius="7.5">
                                                <Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                    <TextBlock Foreground="#ffffff" SnapsToDevicePixels="True" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Value,StringFormat={}{0}%}" RenderTransformOrigin="0.5,0.5">
                                                        <TextBlock.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                                <RotateTransform Angle="0"/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </TextBlock.RenderTransform>
                                                    </TextBlock>
                                                </Viewbox>
                                            </Border>
                                            <Border BorderBrush="#000000" BorderThickness="1" CornerRadius="7.5" Opacity="0.1"/>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#c5c5c5"/>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter TargetName="width1" Property="Width" Value="0.25*"/>
                                <Setter TargetName="width2" Property="Width" Value="0.725*"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>