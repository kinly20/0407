//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;


// 
// 此源代码由 wsdl 自动生成, Version=4.6.81.0。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="RFServiceSoap", Namespace="http://RFService.org/")]
public partial class RFService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetAutoCleanInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SaveAutoCleanInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SaveSNInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDBDateTimeOperationCompleted;
    
    /// <remarks/>
    public RFService() {
        this.Url = "http://10.0.40.173:8090/RFService.asmx";
    }
    
    /// <remarks/>
    public event GetAutoCleanInfoCompletedEventHandler GetAutoCleanInfoCompleted;
    
    /// <remarks/>
    public event SaveAutoCleanInfoCompletedEventHandler SaveAutoCleanInfoCompleted;
    
    /// <remarks/>
    public event SaveSNInfoCompletedEventHandler SaveSNInfoCompleted;
    
    /// <remarks/>
    public event GetDBDateTimeCompletedEventHandler GetDBDateTimeCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://RFService.org/GetAutoCleanInfo", RequestNamespace="http://RFService.org/", ResponseNamespace="http://RFService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetAutoCleanInfo(string ifid, string sn) {
        object[] results = this.Invoke("GetAutoCleanInfo", new object[] {
                    ifid,
                    sn});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAutoCleanInfo(string ifid, string sn, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAutoCleanInfo", new object[] {
                    ifid,
                    sn}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetAutoCleanInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetAutoCleanInfoAsync(string ifid, string sn) {
        this.GetAutoCleanInfoAsync(ifid, sn, null);
    }
    
    /// <remarks/>
    public void GetAutoCleanInfoAsync(string ifid, string sn, object userState) {
        if ((this.GetAutoCleanInfoOperationCompleted == null)) {
            this.GetAutoCleanInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAutoCleanInfoOperationCompleted);
        }
        this.InvokeAsync("GetAutoCleanInfo", new object[] {
                    ifid,
                    sn}, this.GetAutoCleanInfoOperationCompleted, userState);
    }
    
    private void OnGetAutoCleanInfoOperationCompleted(object arg) {
        if ((this.GetAutoCleanInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAutoCleanInfoCompleted(this, new GetAutoCleanInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://RFService.org/SaveAutoCleanInfo", RequestNamespace="http://RFService.org/", ResponseNamespace="http://RFService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SaveAutoCleanInfo(string ifid, string sn, string hostName, string testStartTime, int pass) {
        object[] results = this.Invoke("SaveAutoCleanInfo", new object[] {
                    ifid,
                    sn,
                    hostName,
                    testStartTime,
                    pass});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSaveAutoCleanInfo(string ifid, string sn, string hostName, string testStartTime, int pass, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SaveAutoCleanInfo", new object[] {
                    ifid,
                    sn,
                    hostName,
                    testStartTime,
                    pass}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndSaveAutoCleanInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void SaveAutoCleanInfoAsync(string ifid, string sn, string hostName, string testStartTime, int pass) {
        this.SaveAutoCleanInfoAsync(ifid, sn, hostName, testStartTime, pass, null);
    }
    
    /// <remarks/>
    public void SaveAutoCleanInfoAsync(string ifid, string sn, string hostName, string testStartTime, int pass, object userState) {
        if ((this.SaveAutoCleanInfoOperationCompleted == null)) {
            this.SaveAutoCleanInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAutoCleanInfoOperationCompleted);
        }
        this.InvokeAsync("SaveAutoCleanInfo", new object[] {
                    ifid,
                    sn,
                    hostName,
                    testStartTime,
                    pass}, this.SaveAutoCleanInfoOperationCompleted, userState);
    }
    
    private void OnSaveAutoCleanInfoOperationCompleted(object arg) {
        if ((this.SaveAutoCleanInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SaveAutoCleanInfoCompleted(this, new SaveAutoCleanInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://RFService.org/SaveSNInfo", RequestNamespace="http://RFService.org/", ResponseNamespace="http://RFService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Result SaveSNInfo(string ifid, SNInfo snInfo, Fault[] faults) {
        object[] results = this.Invoke("SaveSNInfo", new object[] {
                    ifid,
                    snInfo,
                    faults});
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSaveSNInfo(string ifid, SNInfo snInfo, Fault[] faults, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SaveSNInfo", new object[] {
                    ifid,
                    snInfo,
                    faults}, callback, asyncState);
    }
    
    /// <remarks/>
    public Result EndSaveSNInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Result)(results[0]));
    }
    
    /// <remarks/>
    public void SaveSNInfoAsync(string ifid, SNInfo snInfo, Fault[] faults) {
        this.SaveSNInfoAsync(ifid, snInfo, faults, null);
    }
    
    /// <remarks/>
    public void SaveSNInfoAsync(string ifid, SNInfo snInfo, Fault[] faults, object userState) {
        if ((this.SaveSNInfoOperationCompleted == null)) {
            this.SaveSNInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSNInfoOperationCompleted);
        }
        this.InvokeAsync("SaveSNInfo", new object[] {
                    ifid,
                    snInfo,
                    faults}, this.SaveSNInfoOperationCompleted, userState);
    }
    
    private void OnSaveSNInfoOperationCompleted(object arg) {
        if ((this.SaveSNInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SaveSNInfoCompleted(this, new SaveSNInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://RFService.org/GetDBDateTime", RequestNamespace="http://RFService.org/", ResponseNamespace="http://RFService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public  DateTime GetDBDateTime() {
        object[] results = this.Invoke("GetDBDateTime", new object[0]);
        return ((System.DateTime)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDBDateTime(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDBDateTime", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.DateTime EndGetDBDateTime(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.DateTime)(results[0]));
    }
    
    /// <remarks/>
    public void GetDBDateTimeAsync() {
        this.GetDBDateTimeAsync(null);
    }
    
    /// <remarks/>
    public void GetDBDateTimeAsync(object userState) {
        if ((this.GetDBDateTimeOperationCompleted == null)) {
            this.GetDBDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBDateTimeOperationCompleted);
        }
        this.InvokeAsync("GetDBDateTime", new object[0], this.GetDBDateTimeOperationCompleted, userState);
    }
    
    private void OnGetDBDateTimeOperationCompleted(object arg) {
        if ((this.GetDBDateTimeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDBDateTimeCompleted(this, new GetDBDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://RFService.org/")]
public partial class SNInfo {
    
    private string snField;
    
    private string pnField;
    
    private WorkStation workStationField;
    
    private Pass passField;
    
    private int planCountField;
    
    private int failCountField;
    
    private System.DateTime startTimeField;
    
    private System.DateTime stopTimeField;
    
    private string siteField;
    
    private string userNameField;
    
    /// <remarks/>
    public string SN {
        get {
            return this.snField;
        }
        set {
            this.snField = value;
        }
    }
    
    /// <remarks/>
    public string PN {
        get {
            return this.pnField;
        }
        set {
            this.pnField = value;
        }
    }
    
    /// <remarks/>
    public WorkStation WorkStation {
        get {
            return this.workStationField;
        }
        set {
            this.workStationField = value;
        }
    }
    
    /// <remarks/>
    public Pass Pass {
        get {
            return this.passField;
        }
        set {
            this.passField = value;
        }
    }
    
    /// <remarks/>
    public int PlanCount {
        get {
            return this.planCountField;
        }
        set {
            this.planCountField = value;
        }
    }
    
    /// <remarks/>
    public int FailCount {
        get {
            return this.failCountField;
        }
        set {
            this.failCountField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime StartTime {
        get {
            return this.startTimeField;
        }
        set {
            this.startTimeField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime StopTime {
        get {
            return this.stopTimeField;
        }
        set {
            this.stopTimeField = value;
        }
    }
    
    /// <remarks/>
    public string Site {
        get {
            return this.siteField;
        }
        set {
            this.siteField = value;
        }
    }
    
    /// <remarks/>
    public string UserName {
        get {
            return this.userNameField;
        }
        set {
            this.userNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://RFService.org/")]
public enum WorkStation {
    
    /// <remarks/>
    Hitting,
    
    /// <remarks/>
    Threading,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://RFService.org/")]
public enum Pass {
    
    /// <remarks/>
    Pass,
    
    /// <remarks/>
    Fail,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://RFService.org/")]
public partial class Result {
    
    private bool successField;
    
    private string messageField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://RFService.org/")]
public partial class Fault {
    
    private string pointField;
    
    private string faultInfoField;
    
    /// <remarks/>
    public string Point {
        get {
            return this.pointField;
        }
        set {
            this.pointField = value;
        }
    }
    
    /// <remarks/>
    public string FaultInfo {
        get {
            return this.faultInfoField;
        }
        set {
            this.faultInfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
public delegate void GetAutoCleanInfoCompletedEventHandler(object sender, GetAutoCleanInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAutoCleanInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAutoCleanInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
public delegate void SaveAutoCleanInfoCompletedEventHandler(object sender, SaveAutoCleanInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SaveAutoCleanInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SaveAutoCleanInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
public delegate void SaveSNInfoCompletedEventHandler(object sender, SaveSNInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SaveSNInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SaveSNInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Result Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Result)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
public delegate void GetDBDateTimeCompletedEventHandler(object sender, GetDBDateTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDBDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDBDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.DateTime Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.DateTime)(this.results[0]));
        }
    }
}
