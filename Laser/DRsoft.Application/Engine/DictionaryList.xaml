<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Engine.Behaviors">

    <SolidColorBrush x:Key="BorderBrush" Color="Gray" />
    <SolidColorBrush x:Key="DrLaserWhiteFontColor" Color="White" />
    <SolidColorBrush x:Key="DrLaserBlackFontColor" Color="#FF484D5E" />
    <SolidColorBrush x:Key="DrLaserBlackBackGround" Color="#FF484D5E" />
    <SolidColorBrush x:Key="DrLaserWhiteBackGround" Color="White" />
    <SolidColorBrush x:Key="DrLaserFontColor" Color="White" />
    <SolidColorBrush x:Key="DrLaserBackGround" Color="#FF484D5E" />

    <Style x:Key="TxtPwd" TargetType="{x:Type TextBox}">
        <Setter Property="TextDecorations">
            <Setter.Value>
                <TextDecorationCollection>
                    <TextDecoration>
                        <TextDecoration.Pen>
                            <Pen
                                Brush="Black"
                                DashCap="Round"
                                EndLineCap="Round"
                                StartLineCap="Round"
                                Thickness="10">
                                <Pen.DashStyle>
                                    <DashStyle Dashes="0.0,1.2" Offset="0.6" />
                                </Pen.DashStyle>
                            </Pen>
                        </TextDecoration.Pen>
                        <TextDecoration.Location>
                            <TextDecorationLocation>Strikethrough</TextDecorationLocation>
                        </TextDecoration.Location>
                    </TextDecoration>
                </TextDecorationCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="#FF484D5E" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{StaticResource SourceHanSansSc}" />
    </Style>

    <Style x:Key="CheckBoxBlackTheme" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#FF262E34" />
        <Setter Property="Foreground" Value="#FF262E34" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                        <Border
                            Width="30"
                            Height="30"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <!--  your color here  -->
                            <Path
                                Name="eliCheck"
                                Width="15"
                                Height="10"
                                Data="M 2,4 C 2,4 3,5 5,13 C 5,13 5,3 12,0"
                                Stroke="HotPink"
                                StrokeThickness="3"
                                Visibility="Collapsed" />
                        </Border>
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF9C9E9F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxBlackTheme1" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#FF262E34" />
        <Setter Property="Foreground" Value="#FF262E34" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                        <Border
                            Width="30"
                            Height="30"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <!--  your color here  -->
                            <Path
                                Name="eliCheck"
                                Width="15"
                                Height="10"
                                Data="M 2,4 C 2,4 3,5 5,13 C 5,13 5,3 12,0"
                                Stroke="HotPink"
                                StrokeThickness="3"
                                Visibility="Collapsed" />
                        </Border>
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF9C9E9F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="43,0,1,0" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="GreenYellow" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1,0" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="White" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="White"
                            BorderThickness="0"
                            CornerRadius="15">
                            <Ellipse
                                x:Name="ellipse"
                                Width="25"
                                Height="25"
                                Margin="1,0,1,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#FFA5D553" />
                                        <GradientStop Offset="1" Color="#FF8514D6" />
                                        <GradientStop Offset="0.489" Color="#FE4F9BC3" />
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="1" />
                                </Ellipse.Effect>
                            </Ellipse>
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border>
                            <Image
                                x:Name="image"
                                Height="85"
                                Source="/Resources/SwitchOff.png"
                                Stretch="Uniform" />
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="/Resources/SwitchON.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="image" Property="Source" Value="/Resources/SwitchOff.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LedRedButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border>
                            <Image
                                x:Name="image"
                                Source="/Resources/RedOff.png"
                                Stretch="Uniform" />
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="/Resources/RedOn.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="image" Property="Source" Value="/Resources/RedOff.png" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LedGreenButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border>
                            <Image
                                x:Name="image"
                                Source="/Resources/GreenOff.png"
                                Stretch="Uniform" />
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="/Resources/GreenOn.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="image" Property="Source" Value="/Resources/GreenOff.png" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LedYellowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border>
                            <Image
                                x:Name="image"
                                Source="/Resources/RedOff.png"
                                Stretch="Uniform" />
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="/Resources/YellowOn.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="image" Property="Source" Value="/Resources/YellowOff.png" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchToggleButtonStyle2" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border>
                            <Image
                                x:Name="image"
                                Height="85"
                                Source="/Resources/Switch2Off.png"
                                Stretch="Uniform" />
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="/Resources/Switch2On.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="image" Property="Source" Value="/Resources/Switch2Off.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="KnobButtonStyle" TargetType="{x:Type local:KnobButton}">
        <Setter Property="Background" Value="#0068F4" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:KnobButton">
                    <Grid x:Name="bdGrid" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
                        <Grid Margin="16" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <RotateTransform x:Name="rotatevalue" Angle="00" />
                            </Grid.RenderTransform>

                            <Ellipse
                                Margin="4"
                                Fill="#FFF6F6F6"
                                Stroke="{StaticResource BorderBrush}">
                                <Ellipse.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Direction="-75"
                                        ShadowDepth="2"
                                        Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background.(SolidColorBrush.Color)}" />
                                </Ellipse.Effect>
                            </Ellipse>
                            <Ellipse
                                Width="8"
                                Height="8"
                                Margin="12"
                                VerticalAlignment="Bottom"
                                Fill="{TemplateBinding Background}" />
                        </Grid>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, StringFormat={}{0:F2}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="200" />
        <Setter Property="Maximum" Value="1" />
        <Setter Property="Foreground" Value="#36a8e2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid
                        Width="50"
                        Height="200"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <Grid.Resources>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ProgressBar}}" />
                                <Setter Property="RadiusX" Value="25" />
                                <Setter Property="RadiusY" Value="5" />
                            </Style>
                        </Grid.Resources>
                        <Grid x:Name="Root" Margin="0,5" />
                        <Rectangle Opacity="0.2" />

                        <Rectangle
                            Height="10"
                            VerticalAlignment="Top"
                            Opacity="0.1" />
                        <Rectangle Margin="0,0,0,1" VerticalAlignment="Bottom">
                            <interactivity:Interaction.Behaviors>
                                <local:ProgressToHeightBehavior BasedElement="{Binding ElementName=Root}" Progress="{Binding Value, RelativeSource={RelativeSource AncestorType=ProgressBar}}" />
                            </interactivity:Interaction.Behaviors>
                        </Rectangle>

                        <Grid VerticalAlignment="Bottom">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="10" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <interactivity:Interaction.Behaviors>
                                    <local:ProgressToHeightBehavior BasedElement="{Binding ElementName=Root}" Progress="{Binding Value, RelativeSource={RelativeSource AncestorType=ProgressBar}}" />
                                </interactivity:Interaction.Behaviors>
                            </Grid>
                            <Rectangle Grid.Row="0" Grid.RowSpan="2" />
                        </Grid>

                        <Rectangle Opacity="0.6">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,.5">
                                    <GradientStop Color="Black" />
                                    <GradientStop Offset="1" Color="Transparent" />
                                    <GradientStop Offset="0.6" Color="#41000000" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Grid VerticalAlignment="Bottom">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="5" />
                            </Grid.RowDefinitions>
                            <Grid Margin="0,0,0,5">
                                <interactivity:Interaction.Behaviors>
                                    <local:ProgressToHeightBehavior BasedElement="{Binding ElementName=Root}" Progress="{Binding Value, RelativeSource={RelativeSource AncestorType=ProgressBar}}" />
                                </interactivity:Interaction.Behaviors>
                            </Grid>
                            <Rectangle
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Height="10"
                                VerticalAlignment="Top" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CheckEx}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckEx}">
                    <Viewbox Stretch="Uniform">
                        <Border
                            x:Uid="bd"
                            Width="20"
                            Height="20"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="0.3" />
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightYellow" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="#FFD8ECFA" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property ="IsOpen" Value="False">
        </Setter>

        <Setter Property ="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="errorBorder" Background="#CC595959" BorderBrush="#99000000" BorderThickness="1" CornerRadius ="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin ="0" MaxWidth="320">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius ="4" ShadowDepth="0"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Margin ="16,16,8,16" VerticalAlignment="Top">
                                <Path x:Name="path1" Grid.ColumnSpan="1" Data="M9.0789473,12.870737 L10.927632,12.870737 10.927632,14.5 9.0789473,14.5 z M9.0000001,5.9999999 L11,5.9999999 11,7.994543 10.526316,12.308322 9.4802633,12.308322 9.0000001,7.994543 z M9.9647158,1.8074455 C9.5912184,1.7923756 9.2860216,2.1402843 9.2860216,2.1402845 9.2860216,2.1402843 2.5977592,14.8926 2.2227221,15.46075 1.8476844,16.028899 2.5562553,16.218284 2.5562553,16.218284 2.5562553,16.218284 16.2035,16.218284 17.18278,16.218284 18.162063,16.218284 17.870029,15.460751 17.870029,15.460751 17.870029,15.460751 11.056506,2.8352754 10.494117,2.1197443 10.31837,1.8961406 10.134488,1.8142953 9.9647158,1.8074455 z M9.9331295,0.00021409988 C10.317457,0.0076069832 10.762559,0.20740509 11.244278,0.77299643 12.785778,2.5828881 19.97391,16.249695 19.97391,16.249695 19.97391,16.249695 20.318179,17.954408 18.505573,17.985971 16.692966,18.017535 1.5982747,17.985971 1.5982747,17.985971 1.5982747,17.985971 -0.27740097,18.206807 0.03512764,16.028899 0.3476572,13.850991 8.5362361,0.89893103 8.536236,0.8989315 8.5362361,0.89893103 9.0876089,-0.016049385 9.9331295,0.00021409988 z" Height="17" Stretch="Fill" Width="20" Visibility="Visible" Fill ="Red"/>
                            </Border>
                            <TextBlock x:Name="textBlock" Text="{TemplateBinding Content }" Margin="0,14,10,14" FontSize="14" Grid.Column ="1" TextWrapping="Wrap" Foreground="Red"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property ="IsOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:3">
                                <DiscreteObjectKeyFrame KeyTime ="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility >
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame KeyTime ="0:0:3">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Hidden</Visibility >
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>